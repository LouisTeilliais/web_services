// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  sessionId       Int      @id @default(autoincrement()) @map("session_id")
  title           String
  description     String
  sessionDate     DateTime @map("session_date")
  placesRemaining Int      @map("places_remaining")
  placesAvailable Int      @map("places_available")
  isFull          Boolean  @default(false) @map("is_full")
  sportId         Int?     @map("sport_id")
  sport           Sport?   @relation(fields: [sportId], references: [sportId])
  users           User[]   @relation("UserSessions")
  latitude        Float?   @map("latitude")
  longitude       Float?   @map("longitude")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  @@map("sessions")
}

model User {
  userId   Int       @id @default(autoincrement()) @map("user_id")
  email    String    @unique
  name     String
  sessions Session[] @relation("UserSessions")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  @@map("users")
}

model Sport {
  sportId  Int       @id @default(autoincrement()) @map("sport_id")
  name     String
  sessions Session[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  @@map("sports")
}
